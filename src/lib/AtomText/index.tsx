import { SerializedStyles } from '@emotion/react'
import styled from '@emotion/styled'
import { ReactNode } from 'react'

type TagsTexts =
  | 'h1'
  | 'h2'
  | 'h3'
  | 'h4'
  | 'h5'
  | 'h6'
  | 'p'
  | 'span'
  | 'li'
  | 'a'
  | 'strong'
  | 'em'
  | 'i'
  | 'b'
  | 'u'
  | 's'
  | 'small'
  | 'big'
  | 'code'
  | 'pre'
  | 'blockquote'
  | 'hr'
  | 'br'
  | 'img'
  | 'table'
  | 'thead'
  | 'tbody'
  | 'tr'
  | 'td'
  | 'th'
  | 'ul'
  | 'ol'
  | 'dl'
  | 'dt'
  | 'dd'
  | 'q'
  | 'cite'
  | 'abbr'
  | 'acronym'
  | 'del'
  | 'ins'
  | 'sub'
  | 'sup'
  | 'var'
  | 'samp'
  | 'kbd'
  | 'tt'
  | 'bdo'
  | 'button'
  | 'label'
  | 'select'
  | 'option'
  | 'textarea'
  | 'form'
  | 'fieldset'
  | 'legend'
  | 'optgroup'
  | 'option'
  | 'select'
  | 'datalist'
  | 'keygen'
  | 'output'
  | 'progress'
  | 'meter'
  | 'details'
  | 'summary'
  | 'menu'
  | 'menuitem'
  | 'canvas'
  | 'caption'
  | 'col'
  | 'colgroup'
  | 'table'
  | 'tbody'
  | 'tfoot'
  | 'thead'
  | 'tr'
  | 'td'
  | 'th'
  | 'button'
  | 'datalist'
  | 'fieldset'
  | 'form'
  | 'input'
  | 'label'
  | 'legend'
  | 'meter'
  | 'optgroup'
  | 'option'
  | 'output'
  | 'progress'
  | 'select'
  | 'textarea'
  | 'details'
  | 'summary'
  | 'menu'
  | 'menuitem'
  | 'canvas'
  | 'caption'
  | 'col'
  | 'colgroup'
  | 'table'
  | 'tbody'
  | 'tfoot'
  | 'thead'
  | 'tr'
  | 'td'
  | 'th'
  | 'a'
  | 'b'
  | 'i'
  | 'em'
  | 'strong'
  | 'u'
  | 's'
  | 'small'
  | 'big'
  | 'code'
  | 'pre'
  | 'blockquote'
  | 'hr'
  | 'br'
  | 'img'
  | 'table'

type Props = {
  children?: ReactNode
  as?: TagsTexts
  css?: SerializedStyles
  padding?: string
  margin?: string
  htmlFor?: string
  textDecoration?: 'none' | 'underline' | 'line-through' | 'overline'
  fontWeight?:
    | 'normal'
    | 'bold'
    | 'bolder'
    | 'lighter'
    | '100'
    | '200'
    | '300'
    | '400'
    | '500'
    | '600'
    | '700'
    | '800'
    | '900'
  fontSize?: string
  textAlign?: 'left' | 'center' | 'right' | 'justify'
  opacity?: number
  width?: string
}
export const AtomText = styled.span<Props>`
  font-size: ${(props) => props.fontSize};
  text-align: ${(props) => props.textAlign};
  opacity: ${(props) => props.opacity ?? 'none'};
  font-weight: ${(props) => props.fontWeight ?? 'normal'};
  margin: ${(props) => (props.margin ? `${props.margin}` : '0 0 0 0')};
  padding: ${(props) => (props.padding ? `${props.padding}` : '0 0 0 0')};
  text-decoration: ${(props) => props.textDecoration ?? 'none'};
  color: ${(props) => props.color || '#fff'};
  width: ${(props) => props.width || 'auto'};
  ${(props) => props?.css};
`

export default AtomText
